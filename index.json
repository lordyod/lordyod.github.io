[{"categories":["tech"],"content":"There are a lot of great reasons to use a static site. One of the challenges for a blog based on a static site generator like Hugo is incorporating a comment system. In this post, we’ll walk through adding a comment system using Isso, a self-hosted and open-source comment library. ","date":"Feb 3, 2022","objectID":"https://www.lordyod.com/enabling-comments/:0:0","tags":["blog","hugo"],"title":"Enabling Comments in Hugo with Isso","uri":"https://www.lordyod.com/enabling-comments/"},{"categories":["tech"],"content":"Isso? Isso is an open-source comment server which you host on your own infrastructure. Comments are written in Markdown and stored internally in a SQLite database. All you need to do is run the server and embed the script in your template. It has several big advantages: Because it is hosted on your own infrastructure, nobody else has control of your data, and in particular nobody can make money off your users There isn’t a lot of complicated web programming needed It’s very simple Of course, it does have drawbacks: You have to be able to host a comment server You need to be proficient with some basic terminal skills and willing to debug things when they break It’s not one of the built-in comment systems supported by Hugo Hosting a server on your own infrastructure is not without security risks Following in the footsteps of several other authors on the subject1, let’s walk through what’s needed in order to add comments to our blog. ","date":"Feb 3, 2022","objectID":"https://www.lordyod.com/enabling-comments/:1:0","tags":["blog","hugo"],"title":"Enabling Comments in Hugo with Isso","uri":"https://www.lordyod.com/enabling-comments/"},{"categories":["tech"],"content":"Server hosting The first thing we’ll need is an Isso server up and running. To obtain this you will need to have a server accessible to the public internet, such as one of the following: A Raspberry Pi, spare laptop or similar A headless VM on a server you already have A cloud server There are lots of resources for hosting things in the cloud, and this is a viable option. Similarly, hosting something on a small box like a Pi is a great project. Since I already have a dedicated VM host running Proxmox, I decided to deploy Isso as a Docker container. It’s possible to run Isso directly but the ability to redeploy resources more easily makes Docker a win in my book. ","date":"Feb 3, 2022","objectID":"https://www.lordyod.com/enabling-comments/:2:0","tags":["blog","hugo"],"title":"Enabling Comments in Hugo with Isso","uri":"https://www.lordyod.com/enabling-comments/"},{"categories":["tech"],"content":"Mail We want users to be able to subscribe to replies to their comments. Other comment services like Disqus handle this for us but for any self-hosted solution we’ll need to work it out. It’s completely possible to host our own mail server, but it’s a mountain of work to manage it. A much simpler solution is to use a third-party solution like Mailgun. Sign up for a free account (you’ll need to enter a credit card but won’t need to pay anything). ","date":"Feb 3, 2022","objectID":"https://www.lordyod.com/enabling-comments/:3:0","tags":["blog","hugo"],"title":"Enabling Comments in Hugo with Isso","uri":"https://www.lordyod.com/enabling-comments/"},{"categories":["tech"],"content":"Prerequisites Before we continue, let’s make sure we have our infrastructure setup. Our host machine looks like this: Running Ubuntu2, though basically any Linux distribution will look substantially similar to this. Docker and Docker-Compose are installed.3 Our gateway is setup for port forwarding HTTPS traffic4. We have a web server/reverse proxy set up and configured.5 We have a Mailgun account setup with a key. Once our host is ready we can proceed. ","date":"Feb 3, 2022","objectID":"https://www.lordyod.com/enabling-comments/:4:0","tags":["blog","hugo"],"title":"Enabling Comments in Hugo with Isso","uri":"https://www.lordyod.com/enabling-comments/"},{"categories":["tech"],"content":"Docker-compose We’ll add the following to our docker-compose.yml: isso:image:isso:latestcontainer_name:issohostname:issorestart:unless-stoppedvolumes:- ${DIR}/config:/config- ${DIR}/db:/dbports:- ${PORT}:8080environment:- UID=${UID}- GID=${GID} In this code, we’ll replace the following: Variable Meaning DIR Directory on the host, which contains the Isso config and database. Make sure it is owned by the user which runs docker-compose. PORT The port on the host which maps to the Isso container. You can leave this entry out if you aren’t using 8080 for anything. UID The user ID of the user which owns DIR. GID The group ID of the user which owns DIR. ","date":"Feb 3, 2022","objectID":"https://www.lordyod.com/enabling-comments/:5:0","tags":["blog","hugo"],"title":"Enabling Comments in Hugo with Isso","uri":"https://www.lordyod.com/enabling-comments/"},{"categories":["tech"],"content":"Reverse proxy with nginx Next we’ll add a config file so that our web server will point requests to the container as a reverse proxy. If you are using the Swag container from Linuxserver.io (and I recommend that you do) you can add this to your swag/nginx/site-confs directory as isso.conf: server { listen 443 ssl; listen [::]:443 ssl; server_name isso.*; include /config/nginx/ssl.conf; client_max_body_size 0; location / { include /config/nginx/proxy.conf; resolver 127.0.0.11 valid=30s; set $upstream_app localhost; set $upstream_port ${PORT}; set $upstream_proto http; proxy_pass $upstream_proto://$upstream_app:$upstream_port; } } Note here we need to set ${PORT} to match what was used in the docker-compose.yml file. (If you removed the entry just use 8080) ","date":"Feb 3, 2022","objectID":"https://www.lordyod.com/enabling-comments/:6:0","tags":["blog","hugo"],"title":"Enabling Comments in Hugo with Isso","uri":"https://www.lordyod.com/enabling-comments/"},{"categories":["tech"],"content":"Isso config Now we’ll setup our Isso config file at ${DIR}/config/isso.cfg: [general] ; database location, check permissions, automatically created if not exists dbpath = /db/comments.db ; your website or blog (not the location of Isso!) host = https://${BLOG_URL} ; you can add multiple hosts for local development ; or SSL connections. There is no wildcard to allow ; any domain. notify = smtp reply-notifications = true gravatar = true [smtp] ; your mailgun username username = ${MAILGUN_USERNAME} ; your mailgun password password = ${MAILGUN_PASSWORD} host = smtp.mailgun.org port = 587 security = starttls ; this address will receive messages when there are new comments for moderation to = ${TO_ADDRESS} ; mail to users comes from this address from = ${FROM_ADDRESS} timeout = 10s [server] listen = http://localhost:8080 reload = off profile = off ; the public URL for the Isso server public-endpoint = https://${ISSO_URL} [moderation] enabled = true purge-after = 30d [guard] enabled = true ratelimit = 10 direct-reply = 3 reply-to-self = false require-author = true require-email = true [hash] salt = ${SALT} algorithm = pbkdf2 [admin] enabled = true ; the admin password for Isso password = ${PASSWORD} You’ll need to edit a number of the entries in this config file to match your setup, using info from your Mailgun and server config. ","date":"Feb 3, 2022","objectID":"https://www.lordyod.com/enabling-comments/:7:0","tags":["blog","hugo"],"title":"Enabling Comments in Hugo with Isso","uri":"https://www.lordyod.com/enabling-comments/"},{"categories":["tech"],"content":"Edit Hugo template Next up we’ll need to edit our blog template to add the comment form. This part is pretty easy but will have one wrinkle to deal with. The specific file you need to edit will depend on your template, for mine I edit layouts/partials/comment.html and add the following: \u003cdiv id=\"comments\"\u003e {{- /* Isso Comment System */ -}} {{\"\u003c!-- begin comments //--\u003e\" | safeHTML}} \u003cdiv class=\"post-footer\"\u003e \u003csection id=\"isso-thread\"\u003e\u003c/section\u003e \u003cscript data-isso=\"https://isso.lordyod.com/\" data-isso-id=\"thread-id\" data-isso-css=\"true\" data-isso-lang=\"en\" data-isso-reply-to-self=\"true\" data-isso-reply-notifications=\"true\" data-isso-require-author=\"true\" data-isso-require-email=\"true\" data-isso-max-comments-top=\"10\" data-isso-max-comments-nested=\"5\" data-isso-reveal-on-click=\"5\" data-isso-avatar=\"false\" data-isso-gravatar=\"true\" data-isso-feed=\"true\" data-isso-vote=\"false\" src=\"https://${ISSO_URL}/js/embed.min.js\"\u003e\u003c/script\u003e \u003c/div\u003e {{\"\u003c!-- end comments //--\u003e\" | safeHTML}} \u003c/div\u003e Make sure to edit ${ISSO_URL} to match your hosted Isso instance. ","date":"Feb 3, 2022","objectID":"https://www.lordyod.com/enabling-comments/:8:0","tags":["blog","hugo"],"title":"Enabling Comments in Hugo with Isso","uri":"https://www.lordyod.com/enabling-comments/"},{"categories":["tech"],"content":"Start Isso This part is simple, just run docker-compose up -d to start the container. Once it’s up and running, we should be able to load any of our posts and see a comment form at the bottom. ","date":"Feb 3, 2022","objectID":"https://www.lordyod.com/enabling-comments/:9:0","tags":["blog","hugo"],"title":"Enabling Comments in Hugo with Isso","uri":"https://www.lordyod.com/enabling-comments/"},{"categories":["tech"],"content":"Final thoughts This setup is pretty basic. You can customize it further by using some CSS or further customizing the template. That said, it fulfills the basic needs pretty well, and does so without selling our users' data. See Stíobhart Matulevicz and Kevin Masson. ↩︎ I prefer to use LTS distributions when possible. As I am writing this that means Ubuntu 20.04. ↩︎ For more on installing Docker (or any other Linux tools, really) I recommend the extremely well-written Digital Ocean tutorials. ↩︎ This is a complicated topic with a lot of system-dependent details, probably Port Forward is the best place to get started learning about it. ↩︎ Another big topic. For brevity, I’ll suggest just going with a Swag container, that’s what I use. ↩︎ ","date":"Feb 3, 2022","objectID":"https://www.lordyod.com/enabling-comments/:10:0","tags":["blog","hugo"],"title":"Enabling Comments in Hugo with Isso","uri":"https://www.lordyod.com/enabling-comments/"},{"categories":["rpg"],"content":"I’ve been running D\u0026D 5th Edition for a little while now and I’ve begun to form some opinions about the monster design in this edition of the game. At a high level, individual enemies don’t feel very organic to me. Let’s talk about why that is, and what we can do about it. Before we go any further, I should mention that I learned about this technique from Matt Colville’s Running the Game videos: Let’s put this technique into practice and build some better derro! ","date":"Oct 20, 2021","objectID":"https://www.lordyod.com/4e-derro/:0:0","tags":["homebrew","dnd","enemies"],"title":"Using 4th Edition Combat Roles to Build Better Derro","uri":"https://www.lordyod.com/4e-derro/"},{"categories":["rpg"],"content":"Background 5th Edition D\u0026D has this thing called bounded accuracy, which (to greatly simplify things) means that as characters gain levels, their combat modifiers don’t change too much. A character’s attack roll boils down to: 1d20 + Proficiency bonus + attribute modifier + magic bonus + situational bonus This is essentially what it’s been since 3rd edition came out (though we called it Base Attack Bonus back then). The big change has been the rate at which these different numbers change. The attribute modifier is mostly about the same, however in 5e there is a hard maximum that did not exist in 3.x, meaning that a similar 3.x character might have another point or two from attribute modifiers. Similarly, magic item bonuses from weapons are roughly similar, though the 3.x values tended to be a bit higher. Where you see the big difference is in proficiency bonuses and magic/situational bonuses. A 5th edition PC’s proficiency bonus starts at +2 and goes to +6, while a 3rd edition PC’s base attack bonus ranges from +0 all the way to +20 (depending on class selection). A 3rd edition PC generally has access to far more magic items that affect attacks than a 5th edition PC. This is for a couple of reasons: 5th edition has attunement requirements for many items (particularly ones which impact attack rolls), 5e’s treasure tables give out way fewer items overall, and it regularly gives advantage or disadvantage rather than a strict modifier to the roll. A 3rd edition PC has many ways to stack up situational bonuses that are typically not available to a 5e PC. These are things like flanking (which gave +2 to attack instead of advantage), charging, feats, spell effects, and so on. Many things that gave small modifiers in 3.x give advantage in 5e. The net effect here is that in 3rd edition, the range of values from an attack roll was quite large, while in 5th edition it doesn’t change too much. In 3rd edition, a low-level challenge such as a goblin or kobold was simply not a threat at high levels, as you only missed if you rolled a 1 and it only hit you if it rolled a 20. The same situation is much more threatening and challenging in 5th edition: if your AC has only increased by +3, then the goblin is only 15% less likely to hit you. If your attack bonus has increased +5 (which is a really huge amount in 5e) you are still only 25% more likely to hit a goblin. The impact on the game? Goblins (and kobolds, and orcs, and so on) are still meaningful threats at higher-level play, when in 3rd edition they weren’t even speed bumps. This is pretty cool! ","date":"Oct 20, 2021","objectID":"https://www.lordyod.com/4e-derro/:1:0","tags":["homebrew","dnd","enemies"],"title":"Using 4th Edition Combat Roles to Build Better Derro","uri":"https://www.lordyod.com/4e-derro/"},{"categories":["rpg"],"content":"The problem Something seems to have been lost as a lot of monsters went through the design process to achieve this. Especially if we take a look at what monsters in 4th edition looked like, it seems like enemies not only have a lot less variety, but also that they are generally less interesting. I think this may be a result of trying to keep enemies relevant across many levels? Anyways, let’s take a look at derro in 5e: AC 13 3 HD Advantage on saves against spells Melee: hooked spear, +2 to hit, 1d6 damage, can knock the target prone Ranged: light crossbow, +4 to hit, 1d8+2 damage Let’s look at what Keith Ammann has to say about Derro over at The Monsters Know: With high Dexterity and above-average Constitution but merely average Strength, derro are skirmishers, but not especially mobile ones. Their Intelligence is average, but their Wisdom, for some reason, is in the cellar. This is unusual; the reverse is far more common, especially since Wisdom supports the Perception skill. Not only are they easy to get the drop on, they also have an underdeveloped survival instinct, making them more likely to fight to the death. They are, however, proficient in Stealth, predisposing them toward an ambush strategy. Look, this is a boring enemy. And while that’s fine, not every enemy is going to be all that interesting, this is still the foot soldier for this faction. Speaking of factions, the other kind of derro is a savant, who is a 5th level spellcaster with 8HD and AC 13. One challenging thing here is that derro have CR 1/4 and the derro savant has lightning bolt so it can be challenging to thread the needle of appropriate danger for your party (if you are worried about that sort of thing). The bigger issue is that there’s not a lot going on here. There are two kinds of derro, the kind that are easy to surprise and weak and the kind that cast lightning bolt and are weak. So tactically speaking they’re somewhat boring. But the bigger issue here is that they are essentially a monoculture, they’re cookie-cutter by nature. I’d like to have my PC’s face enemies that impart a sense of believability. Intelligent creatures (like derro, goblins, or any other kind of traditional enemy like that) are not going to conform to descriptions like this. There has to be more going on, doesn’t there? ","date":"Oct 20, 2021","objectID":"https://www.lordyod.com/4e-derro/:2:0","tags":["homebrew","dnd","enemies"],"title":"Using 4th Edition Combat Roles to Build Better Derro","uri":"https://www.lordyod.com/4e-derro/"},{"categories":["rpg"],"content":"How can we do better? So what do I think we should do instead? Is there a better way to handle intelligent enemies? Isn’t this how we’ve been playing D\u0026D for 50 years? Well, yes and no. It is mostly how we’ve been playing, certainly since the late 80s when I first played. But there was a period of time when enemy design was quite a bit more interesting. Take a look at the derro from 4th edition Monster Manual 3: Role Attacks Special Artillery Hand crossbow, dagger Bolt spray close AoE, +2d6 damage w/advantage Minion Club Suicide to turn miss into a hit Skirmisher Battleaxe -2 attack/+2d6 damage when bloodied, free attack if opponent bloodied Lurker War pick move and hide as an action, knock target unconscious if hidden as an action, shackle a target as an action, +2d6 damage w/advantage Soldier Spear, punch knock target prone as minor action Controller Scourge, psychic scourge (ranged) creates a lasting AoE centered on an ally, push all creatures within AoE as minor action Brute bite, tentacle flailing tentacle (AoE, must be bloodied), constant AoE damage If you’re unfamiliar with how 4th edition worked, this probably looks strange. The basic idea is that characters (player and otherwise) filled certain reasonably-well-defined combat roles that informed the sorts of things they did. The derro in 4th edition are much higher level but we can see from this list that they all do something interesting, they have attacks that are mostly different from each other, and when they bring special abilities into play they create really interesting enemy variety. What I find really appealing about this method of enemy design is that you really don’t need any more details to get a pretty decent understanding of how a fight with these folks is going to go down: The brute is going to wade into the thickest clump of enemies and try and get everyone in range of its AoE tentacle attacks The soldiers will try to create a sort of front line and knock enemies prone to grant advantage to their allies The artillery (personally I would’ve chosen archer as the name) has a hand crossbow so they’ll try to maneuver into a position to hit as many enemies as possible with their bolt spray attack. The lurkers do a crapload of damage if they’re able to get advantage, and they have the ability to eliminate individual targets, so they’ll sneak around and attack the lfnaks The controller will put their zone ability on the most convenient ally and then move enemies around to create advantages for their side So if we imagine our PC’s fighting against a lot of derro (they’re clearing out a fort, for instance) they’ll experience a lot of different encounters. Of course you’re not going to get a huge mix of all of these different enemy types in every group, most will be soldiers and artillery probably, but even just that small change makes a huge difference. ","date":"Oct 20, 2021","objectID":"https://www.lordyod.com/4e-derro/:3:0","tags":["homebrew","dnd","enemies"],"title":"Using 4th Edition Combat Roles to Build Better Derro","uri":"https://www.lordyod.com/4e-derro/"},{"categories":["rpg"],"content":"The solution So let’s take a look at changing our 5e derro with a mindset to creating different roles and make things a bit more interesting. We’ll stick to just tweaking stats and modifying equipment because we don’t want to change their CR. And we’ll leave the savant alone for now. Let’s take the regular derro and create a soldier version. The original version is already a pretty decent archer so we’ll have it lose the spear and use a dagger instead. On top of that we’ll tweak its stats a little bit by reducing its constitution and bumping its dexterity. For the soldier, we’ll tweak the stats a bit. They’ve got a bit more strength and a bit less dexterity and intelligence (smart and nimble derro don’t get into melee combat, after all). They’ve got chain shirts instead of leather armor and javelins instead of a crossbow. Trait Archer Soldier Strength: 10 13 Dexterity: 14 12 Intelligence: 11 8 Constitution: 10 12 AC: 13 14 Attacks: Dagger +2/1d6, crossbow +4/1d8+2 Hooked spear +3/1d6+1 This is a pretty small set of changes, but the result is a clear differentiation between different groups of enemies. When your PC’s see these derro, you can describe the archers as small, nimble-looking crossbow wielders wearing leather armor, who scamper around and keep their distance. The soldiers, in comparison, look like absolute hulks, wearing chain shirts and wielding spears. In combat we haven’t really changed their overall capabilities very much (since we haven’t added any new attacks or actions), we’ve just divided the group up. Now your players can look at their enemies and intuit their behavior based on their appearance and their equipment. This makes the encounter more interesting, and it makes it more rewarding when the players win. ","date":"Oct 20, 2021","objectID":"https://www.lordyod.com/4e-derro/:4:0","tags":["homebrew","dnd","enemies"],"title":"Using 4th Edition Combat Roles to Build Better Derro","uri":"https://www.lordyod.com/4e-derro/"},{"categories":["rpg"],"content":"Final thoughts This is a pretty basic example where we only slightly modified some equipment and stats. If we really want to instill character into our enemies we can go much further, by adding new actions and capabilities. This is difficult at low level because your PC’s aren’t very powerful, but as they gain levels you can do things like give certain enemy types damage resistances that others don’t have, feats, significantly better equipment variation, and so on. I also suggest mining the 4th edition books for other implementations of roles. We’ll do some more of this in later posts and make some higher level enemies. ","date":"Oct 20, 2021","objectID":"https://www.lordyod.com/4e-derro/:5:0","tags":["homebrew","dnd","enemies"],"title":"Using 4th Edition Combat Roles to Build Better Derro","uri":"https://www.lordyod.com/4e-derro/"},{"categories":["rpg"],"content":"I’m not a fan of the common tongue in D\u0026D. The fact that most settings have a language that everybody just speaks seems really off to me. I thought about this while reading what Sam wrote at Caput Caprae: THE COMMON TONGUE Is bullshit. There should be lots of different human languages in your setting. A singular “common tongue” is total bullshit, meant to smooth over difficult worldbuilding and actually challenging social encounters. There are about 8 billion people on the earth, and there are about 6,500 languages spoken, some of which by very few people. Even if with 100 times fewer, with a mere 65 languages, that’s still about 64 more languages than are commonly spoken by humans in your average D\u0026D game. (There’s an argument that the common tongue is “fantasy Esperanto” or “fantasy Ithkuil,” which is a very cool idea that I would love to see developed but thus far haven’t, really.) Point is, there are lots of lots of languages, and all of them are normal to somebody. That’s not what this post is about. Merchants and couriers and diplomats will learn lots and lots of languages here in D\u0026D-fantasyland, but those are all human languages. ","date":"Oct 15, 2021","objectID":"https://www.lordyod.com/languages/:0:0","tags":["dnd","sinath-lonn","homebrew"],"title":"Languages in Sinath Lonn","uri":"https://www.lordyod.com/languages/"},{"categories":["rpg"],"content":"Background I’m not an authority on languages at all so anything I try to come up with is going to be pretty hamfisted. Here’s a starting point, where certain languages are spoken by certain cultures of people, with a fair amount of overlap between them. The people of one nation tend to be able to talk to each other at least well enough to do business. My goal with coming up with this list, just as with the gods, was to put something together relatively quickly and get it into play. I didn’t want to spend a year or two hammering out a fully detailed campaign setting when these details fundamentally don’t impact play very much. In the case of the gods, the nature of divine magic and interaction with the world means that it doesn’t really matter what their names are at this stage in the campaign. For languages, all we really care about is who can talk to who, not what the languages themselves are called. ","date":"Oct 15, 2021","objectID":"https://www.lordyod.com/languages/:1:0","tags":["dnd","sinath-lonn","homebrew"],"title":"Languages in Sinath Lonn","uri":"https://www.lordyod.com/languages/"},{"categories":["rpg"],"content":"Languages With all that out of the way, here is a list of languages with some notes on usage based on cultural or geographic background. I’ll have more to say about both cultures and geography in the future, for now check the footnotes: Language Cultural / Geographic Usage Description Eryssian Dominant language of Eryssia1, used in forest, plains, and diverse cultures. The closest thing the setting has to common at this stage. Like English, it is formed by smashing together a number of other languages. Glaeyn Dominant language in Glaeyd Strium2, used in forest and diverse cultures. A lilting and musical language much like elvish. Mashid Primary/aristocratic language in the Mashioque Dynasty3. An ancient language that hasn’t changed much in centuries. Anywhere outside the Dynasty, it’s considered needlessly formal and is only spoken by academics or privately tutored students, that sort of thing. Rhurin Commoner language in the Mashioque Dynasty. This language descended from the non-Dragonborn inhabitants of the mountains in easter Yeileth, so it is identified with dwarves, goblins, and other miner types. Sounds a lot like Klingon. Eopian Spoken in the plains in eastern Yeileth4. The people who live in the grasslands and foothills of eastern Yeileth are considered more cosmopolitan, engaging in frequent trade with the Free Cities and the Dynasty. More recently, the Dynasty has claimed some of this territory, resulting in this language becoming associated with the Mashioque Army. Ghikrali Spoken in the plains in southwestern Yeileth. The plains south of Glaed Strium are a vast sea of grasslands with very little to break it up. Not very many people leave here. Niovarin Used broadly by the underground cultures of Yeileth, in both Glaeyd Strium and the Mashioque Dynasty. We haven’t explored the underdark much, but if there were an undercommon, this would be it. Azish Used in the mountains in central Eryssia. Viewed as a sort of hillbilly tongue in Alcona5, it is either a point of pride (among the goliaths and orcs who speak it) or derision (from the elves in the capital). Ionqali Used by nearly all seagoing people in the Western Bay. This is something akin a trade tongue, used by Free Cities traders, tritons, and humans from Corus alike. Utlun A local language used in the swamps and coasts of southern Eryssia. Another hillbilly language, spoken by gnolls and lizardfolk who are looked down on by the elves in the capital. Euklish The main language of the Free Cities of Mihira. Each of the Free Cities is an independent nation by law, and they all have a distinct culture and set of languages. That said, anybody who’s anybody in Mihira speaks Euklish. Omesh A language from somewhere far to the east. The PCs have no idea where this language is spoken.[^aleki] Orosa The main language of the Empire of Corus.6 There are many more languages in the Empire, but this is the official one. It’s quite similar to German. ","date":"Oct 15, 2021","objectID":"https://www.lordyod.com/languages/:2:0","tags":["dnd","sinath-lonn","homebrew"],"title":"Languages in Sinath Lonn","uri":"https://www.lordyod.com/languages/"},{"categories":["rpg"],"content":"Communicating despite language barriers For ease of play in the new setting, each of the PC’s spoke Eryssian when we started. It probably would’ve been more fun to enforce some kind of background restriction but since we are playing virtually I wanted it to be workable. The party has met a few groups who don’t speak Eryssian so far, and it’s been interesting working out areas of overlap. Most anyone who grew up in a diverse culture (or near a coastline) speaks at least a few words of Ionqali, and anyone from around the Dynasty probably knows enough Eopian and Rhurin to order dinner, for instance. An island subcontinent, roughly the size of Texas, situated in the center of the Western Bay region. The campaign started in western Eryssia. ↩︎ A nation in western Yeileth, on the north side of the Western Bay region. You can think of it as your typical Tolkien-esque elven kingdom and not be far off. ↩︎ A nation covering most of northeastern Yeileth, with lots of mountains and natural resources. Very stratified society with a powerful aristocracy of Dragonborn houses. ↩︎ Yeileth is a huge continent, making up the northern and eastern borders of the Western Bay. It is dominated by Glaeyd Strium in the northwest, the Mashioque Dynasty in the northeast, and the Free Cities of Mihira in the southeast. ↩︎ The major kingdom in Eryssia, once a powerful elven monarchy but now on the decline under a weak regency. The setting for the campaign. ↩︎ The Empire of Corus is metropolitan, diverse, and made up almost entirely of humans. From the small peninsula of Iyush, west of Eryssia. Fantastical tales of flying carriages and buildings a mile tall can’t possibly be true, can they? ↩︎ ","date":"Oct 15, 2021","objectID":"https://www.lordyod.com/languages/:3:0","tags":["dnd","sinath-lonn","homebrew"],"title":"Languages in Sinath Lonn","uri":"https://www.lordyod.com/languages/"},{"categories":["rpg"],"content":"One of the major differences between traditional D\u0026D and my science fantasy homebrew setting is the nature of divine magic. A big part of this is the relationship between mortals and the gods. In settings such as the Forgotten Realms or Greyhawk, divine magic comes from the gods themselves. That isn’t the case in Sinath Lonn. There are basically two types of gods in this world. The first are patron gods, and they are typically concerned with an individual race such as elves or orcs. The second are greater gods, who get involved in things that they care about in somewhat fickle and inconsistent ways. Note I’ve obviously lifted all of these straight out of existing settings. So far in the campaign the gods' involvement has been pretty low, so there’s still plenty of time to rectify this. I’m planning on going through and recreating the pantheon using some generator tools, such as those provided Kevin Crawford at Sine Nomine. ","date":"Oct 15, 2021","objectID":"https://www.lordyod.com/gods-of-sinath-lonn/:0:0","tags":["sinath-lonn","dnd","homebrew"],"title":"The Gods of Sinath Lonn","uri":"https://www.lordyod.com/gods-of-sinath-lonn/"},{"categories":["rpg"],"content":"Patron Gods These gods are a bit more consistent than the greater gods in that they care about their individual races. They get involved in the mortal world generally only when really momentous events effect their flocks, or when they sense an opportunity to expand their base of power or sphere of influence. Race Deity Description Bugbear Hruggek Barbarian bugbear god of violence Centaur Skerrit Forest creature god of healing Dragonborn Bahamut Platinum dragon god of strength and wisdom Dwarf Moradin All-father dwarf god of the forge Elf Corellon Larethian Nonbinary elf god of art and magic Firbolg Chislev Faerie godmother of the forest Goblin Maglubiyet Giant goblin god of war and plunder Goliath Skoraeus Stone giant god of art Gnome Garl Glittergold Fantastical gnome god of trickery Halfling Yondalla Halfling goddess of home and hearth Hobgoglin Morrghan Raven god of war and death Kobold Kurtulmak Winged kobold god of war and mining Leonin Ajani Leonin hero-king god of justice Lizardfolk Semuanya Gigantic genderless lizardfolk god of breeding and survival Loxodon Eldath Elephant goddess of peace and nature Minotaur Kord Giant god of strength Orc Gruumsh One-eyed orc god of war Satyr Loki Giant satyr god of thieves and trickery Tabaxi Bast Panther goddess of vengeance (and cats) Tortle Trithereon Dragon turtle god of liberty and independence Triton Eadro Merfolk god of sea and storm ","date":"Oct 15, 2021","objectID":"https://www.lordyod.com/gods-of-sinath-lonn/:1:0","tags":["sinath-lonn","dnd","homebrew"],"title":"The Gods of Sinath Lonn","uri":"https://www.lordyod.com/gods-of-sinath-lonn/"},{"categories":["rpg"],"content":"Greater Gods Unlike patron gods, the greater gods aren’t really all that interested in the affairs of individual mortals without some compelling reason. Instead they care about particular ideals or purposes which are filled by many creatures, humanoids or monsters. There have been some cults to these gods over the years and perhaps a few of them have had some effect. More often, the plots and conflicts of the greater gods have some overall effect on the mortal realm. Deity Description Aegir Kraken god of the sea Asmodeus Archdevil god of fiends and torture Azuth Robed god of magic Bahamut Platinum dragon god of strength and wisdom Bhaal Assassin god of murder Celestian Sailor god of stars and wanderers Chauntea Dryad goddess of agriculture and harvest Dol Dorn Armored god of honor and impervious strength Dunatis Giant god of mountains and the earth Goibhniu Fire giant god of the forge Incabulos Vermin swarm god of plague and famine Kelemvor Robed god of the dead Lathander Angelic god of birth and renewal Lolth Spider goddess of traps, trickery, ambush Majere Monk goddess of meditation and order Malar Bear god of the hunt Milil Bard god of poetry and song Mishakal Unicorn goddess of healing Njord Storm giant god of the storm Oghma Librarian god of knowledge Paladine Archon god of rulers Shar Night hag goddess of darkness Savras Valkyrie god of divination and fate Sune goddess of love and beauty Tiamat Multiheaded dragon goddess of rage and fury Vecna Sorcerer-god of secrets ","date":"Oct 15, 2021","objectID":"https://www.lordyod.com/gods-of-sinath-lonn/:2:0","tags":["sinath-lonn","dnd","homebrew"],"title":"The Gods of Sinath Lonn","uri":"https://www.lordyod.com/gods-of-sinath-lonn/"},{"categories":["rpg"],"content":"Servants, agents, and envoys The gods themselves aren’t seen in the world (at least, not in a way that doesn’t strike people as ‘holy shit what is this crazy person talking about’) but their servants definitely are. It is believed that magical/supernatural/etc creatures such as elementals, fey, celestials, fiends, and monstrosities are chosen as servants of one god or another to fulfill tasks (either general or specific). People who are particularly observant of religious practices might balk at interfering with such creatures without some careful thought. ","date":"Oct 15, 2021","objectID":"https://www.lordyod.com/gods-of-sinath-lonn/:3:0","tags":["sinath-lonn","dnd","homebrew"],"title":"The Gods of Sinath Lonn","uri":"https://www.lordyod.com/gods-of-sinath-lonn/"},{"categories":["tech"],"content":"In my post on Hosting with Hugo we build a blog using the Hugo static site generator and deployed it to Github Pages. In this post, we’ll walk through the steps to enable HTTPS on our blog. When we’re done, we’ll have a blog secured with HTTPS and reachable at a custom domain name instead of username.github.io. Long story short, every website should have HTTPS enabled automatically. Instead of going into any kind of detail here I’ll just refer to Cloudflare’s excellent Why use HTTPS? page for more information. The good news is that Github Pages have HTTPS enforced by default. The bad news is that you need to jump through some extra hoops to enable this on a custom domain. Let’s walk through each of these steps now. ","date":"Oct 12, 2021","objectID":"https://www.lordyod.com/enabling-https/:0:0","tags":["hugo","github"],"title":"Enabling HTTPS with Github Pages and Cloudflare","uri":"https://www.lordyod.com/enabling-https/"},{"categories":["tech"],"content":"Buy a domain name There’s no getting around this one. There are lots of hosting providers out there, personally I like Namecheap. If you look around I’m sure you’ll find testimonials one way or another, and I imagine coupons and such too. My domains are pretty cheap, clocking in at about $13/year. Some providers have extra features, such as some kind of domain privacy protection. ","date":"Oct 12, 2021","objectID":"https://www.lordyod.com/enabling-https/:1:0","tags":["hugo","github"],"title":"Enabling HTTPS with Github Pages and Cloudflare","uri":"https://www.lordyod.com/enabling-https/"},{"categories":["tech"],"content":"Configure DNS forwarding with Cloudflare If you don’t already have one, head over to Cloudflare and create an account. Once that’s done, head to the main dashboard and add a new site. Enter the domain name you just bought. The free plan is what you want if you’re reading this page. Once Next the Cloudflare system will automatically generate some DNS records based on what was built by default at your provider. You can accept the defaults for now. ","date":"Oct 12, 2021","objectID":"https://www.lordyod.com/enabling-https/:2:0","tags":["hugo","github"],"title":"Enabling HTTPS with Github Pages and Cloudflare","uri":"https://www.lordyod.com/enabling-https/"},{"categories":["tech"],"content":"Update nameservers at provider The next step will be to configure our domain name provider to point to Cloudflare for name resolution. Cloudflare should give you a page that looks like this: If we head over to our domain name provider we can modify our domain settings to set custom DNS servers. Here is what this looks like using Namecheap: As you can see I’ve configured my custom DNS settings with the server info given by Cloudflare. The next step is to head back to Cloudflare and click the Done, check nameservers button. Cloudflare will check that this is set right and then proceed with offering to improve security or performance by enabling some options. You should probably turn these on but it’s not pertinent to this post. Click through until you are taken to the dashboard. Once you see this control panel, click DNS and we’ll set up entries to point to Github. Here we see the configuration for my site, with the A records added already. These records make it so requests for my site are forwarded to one of these IPs automatically (the specific one is selected based on load). You’ll want to add these records manually: Type Name Address A @ 192.199.108.153 A @ 192.199.109.153 A @ 192.199.110.153 A @ 192.199.111.153 CNAME www {sitename}.github.io On each of these you want to set DNS Only instead of proxying. The four A entries are address records which will return the Github Pages IP address when your website URL is requested. The CNAME record is a canonical name record which aliases one name to another. This responds to requests for www.yoursite.com by telling the client to search for {sitename}.github.io instead. (Make sure {sitename} is configured correctly to the public blog repo we set up last time.) That’s it for our Cloudflare settings, we can head back to Github to finish up. ","date":"Oct 12, 2021","objectID":"https://www.lordyod.com/enabling-https/:3:0","tags":["hugo","github"],"title":"Enabling HTTPS with Github Pages and Cloudflare","uri":"https://www.lordyod.com/enabling-https/"},{"categories":["tech"],"content":"Configure Github settings Head back to your public repo and open up Settings \u003e Pages. Enter in your custom domain name in the Custom domain field and click save: Github will take a minute or two to make a DNS query to check that all your settings are correct. (This can take a while, but in my experience if you’re setup right it should be less than 10 minutes) Once Github has verified this, you will be able to click the Enforce HTTPS box, which causes Github to automatically configure certificates using Let’s Encrypt. That’s it for the public repo settings. The last step is to make our changes permanent in our private repo. ","date":"Oct 12, 2021","objectID":"https://www.lordyod.com/enabling-https/:4:0","tags":["hugo","github"],"title":"Enabling HTTPS with Github Pages and Cloudflare","uri":"https://www.lordyod.com/enabling-https/"},{"categories":["tech"],"content":"Push CNAME in private repo This step is pretty simple, all you need to do is make sure that the public directory gets created with your CNAME file in it: blog on  main [!?] ✦ ➜ mkdir -p public blog on  main ✦ ➜ echo \"www.mysite.com\" \u003e\u003e public/CNAME Commit this change and push it to your repo, and once the site has deployed you should see the certificate is all setup and your connection to the blog is secure: ","date":"Oct 12, 2021","objectID":"https://www.lordyod.com/enabling-https/:5:0","tags":["hugo","github"],"title":"Enabling HTTPS with Github Pages and Cloudflare","uri":"https://www.lordyod.com/enabling-https/"},{"categories":["tech"],"content":"Final words Now that we’ve got HTTPS set up on our site, it’s possible for us to enable all sorts of integrations. Next up we’ll see how we can add a comment system so we can interact with our audience. ","date":"Oct 12, 2021","objectID":"https://www.lordyod.com/enabling-https/:6:0","tags":["hugo","github"],"title":"Enabling HTTPS with Github Pages and Cloudflare","uri":"https://www.lordyod.com/enabling-https/"},{"categories":["tech"],"content":"This blog is built using Hugo, a framework for building static websites. In this post I’ll walk through how I’ve set up a private Github repo with continous deployment to a public site hosted with Github Pages to host my blog. Hugo sites are written using Markdown, which is used to generate the static site itself. I’ve configured this site using a private repository on Github with an automated deployment process using Github Actions. ","date":"Oct 6, 2021","objectID":"https://www.lordyod.com/hosting-with-hugo/:0:0","tags":["hugo","github","ci-cd"],"title":"Hosting With Hugo","uri":"https://www.lordyod.com/hosting-with-hugo/"},{"categories":["tech"],"content":"Install Hugo The first step is installing Hugo to your local system. On my Mac I use Homebrew as my primary package manager so this is quite simple: ~/git ➜ brew install hugo ==\u003e Downloading https://ghcr.io/v2/homebrew/core/hugo/manifests/0.88.1 Already downloaded: /Users/petewilcox/Library/Caches/Homebrew/downloads/3a32d8dc27413a9318978287a25a2862c05e05a105e6e15a2d8ce73b8dc7d369--hugo-0.88.1.bottle_manifest.json ==\u003e Downloading https://ghcr.io/v2/homebrew/core/hugo/blobs/sha256:b815e48af3443fc123ce4d874cf038c25b798ea1944c960618ba3f036020e631 Already downloaded: /Users/petewilcox/Library/Caches/Homebrew/downloads/91c2118189d19ec52f41509e3ac9587affe6b3836f7717e07de6bf639bbf6f29--hugo--0.88.1.arm64_big_sur.bottle.tar.gz ==\u003e Pouring hugo--0.88.1.arm64_big_sur.bottle.tar.gz 🍺 /opt/homebrew/Cellar/hugo/0.88.1: 49 files, 53MB Once Hugo is installed we start a new project and configure it as a git repo ~/git took 4s ➜ hugo new site mysite Congratulations! Your new Hugo site is created in /Users/lordyod/git/mysite. Just a few more steps and you're ready to go: 1. Download a theme into the same-named folder. Choose a theme from https://themes.gohugo.io/ or create your own with the \"hugo new theme \u003cTHEMENAME\u003e\" command. 2. Perhaps you want to add some content. You can add single files with \"hugo new \u003cSECTIONNAME\u003e/\u003cFILENAME\u003e.\u003cFORMAT\u003e\". 3. Start the built-in live server via \"hugo server\". Visit https://gohugo.io/ for quickstart guide and full documentation. ~/git ➜ cd mysite ~/git/mysite ➜ git init Initialized empty Git repository in /Users/lordyod/git/mysite/.git/ mysite on  main [?] ➜ Hugo scaffolds new projects with the needed directories so we just need to worry about what to put where: mysite on  main [?] ➜ tree . ├── archetypes │ └── default.md ├── config.toml ├── content ├── data ├── layouts ├── static └── themes 6 directories, 2 files ","date":"Oct 6, 2021","objectID":"https://www.lordyod.com/hosting-with-hugo/:1:0","tags":["hugo","github","ci-cd"],"title":"Hosting With Hugo","uri":"https://www.lordyod.com/hosting-with-hugo/"},{"categories":["tech"],"content":"Install a theme There are a couple of ways to install themes but I like having them as submodules as it keeps things nice and tidy. For this blog I’m using CodeIT but Hugo has a ton of themes available here: mysite on  main [?] ➜ git submodule add https://github.com/sunt-programator/CodeIT.git themes/CodeIT Cloning into '/Users/lordyod/git/mysite/themes/CodeIT'... remote: Enumerating objects: 11814, done. remote: Counting objects: 100% (626/626), done. remote: Compressing objects: 100% (400/400), done. remote: Total 11814 (delta 364), reused 400 (delta 216), pack-reused 11188 Receiving objects: 100% (11814/11814), 40.80 MiB | 23.12 MiB/s, done. Resolving deltas: 100% (6041/6041), done. Now we have our theme installed as a submodule of our blog source repo, so if we ever need to update we can do so cleanly. Hugo makes it easy to do things like customize individual elements of the theme via templates. ","date":"Oct 6, 2021","objectID":"https://www.lordyod.com/hosting-with-hugo/:2:0","tags":["hugo","github","ci-cd"],"title":"Hosting With Hugo","uri":"https://www.lordyod.com/hosting-with-hugo/"},{"categories":["tech"],"content":"Edit config.toml Next up we edit the config.toml to set up our site: baseURL = 'https://www.lordyod.com/' languageCode = 'en-us' defaultContentLanguage = 'en' title = 'Hitpoints and Himbos' theme = 'CodeIT' [params] version ='0.2.X' description = 'Thoughts on gaming and tech' keywords = ['RPG', 'D\u0026D', 'OSR'] defaultTheme = 'auto' fingerprint = \"sha512\" dateFormat = 'Jan 2, 2006' images = ['/logo.png'] [params.app] title = 'Hitpoints and Himbos' noFavicon = false svgFaveicon ='static/favicon.ico' themeColor = '#ffffff' iconColor = '%5bbad5' titleColor = '%da532c' [params.search] enable = true type = 'lunr' contentLength = 4000 placeholder = '' maxResultLength = 10 snippetLength = 30 highlightTag = 'em' absoluteURL = 'false' [params.search.algolia] index = '' appID = '' searchKey = '' [params.header] destopMode = 'fixed' mobileMode = 'auto' [params.header.title] logo = '' name = 'Hitpoints and Himbos' pre = '' post = '' typeit = false [params.footer] enable = true custom = '' hugo = true copyright = true author = true since = 2021 icp = '' license = '\u003ca rel=\"license external nofollow noopener noreffer\" href=\"https://creativecommons.org/licenses/by-nc/4.0/\" target=\"_blank\"\u003eCC BY-NC 4.0\u003c/a\u003e' [params.section] paginate = 20 dateFormat = '01-02' rss = 10 [params.list] paginate = 20 dateFormat = '01-02' rss = 10 [params.home] rss = 10 [params.home.profile] enable = true gravatarEmail = 'gravatar@lordyod.com' avatarURL = '/images/avatar.png' title = 'Hitpoints and Himbos' subtitle = '' typeit = true social = true disclaimer = '' [params.home.posts] enable = true paginate = 6 defaultHiddenFromHomePage = false [params.social] GitHub = 'lordyod' Twitter = 'lordyod' Youtubechannel = '' Email = 'blog@lordyod.com' RSS = true [params.page] hiddenFromHomePage = false hiddenFromSearch = false twemoji = false lightgallery = false ruby = false fraction = false fontawesome = false linkToMarkdown = false rssFullText = false [params.page.toc] enable = false #keepStatic = true #auto = true [params.page.math] enable = false #copyTex = true [params.page.code] copy = true maxShownLines = 10 [params.page.share] enable = true Twitter = true Reddit = true Blogger = false [menu] [[menu.main]] identifier = \"posts\" pre = \"\" post = \"\" name = \"Posts\" url = \"/posts\" title = \"\" weight = 1 [[menu.main]] identifyer = \"tags\" pre = \"\" post = \"\" name = \"Tags\" url = \"/tags/\" weight = 2 [[menu.main]] identifier = \"categories\" pre = \"\" post = \"\" name = \"Categories\" url = \"/categories/\" title = \"\" weight = 3 [markup] [markup.highlight] codeFences = true guessSyntax = true lineNos = true lineNumbersIntTable = true noClasses = false [author] name = \"Lord Yod\" email = \"blog@lordyod.com\" link = \"https://www.lordyod.com\" [sitemap] changefreq = 'weekly' filename = 'sitemap.xml' priority = 0.5 [Permalinks] posts = \":filename\" [mediaTypes] [mediaTypes.\"text/plain\"] suffixes = [\"md\"] [outputFormats.MarkDown] mediaType = \"text/plain\" isPlainText = true isHTML = false [outputs] home = [\"HTML\", \"RSS\", \"JSON\"] page = [\"HTML\", \"MarkDown\"] section = [\"HTML\", \"RSS\"] taxonomy = [\"HTML\", \"RSS\"] taxonomyTerm = [\"HTML\"] The settings used here are going to depend on the theme you choose and if you want to do anything extra concerning customizing Hugo’s systems. The defaults work for me in most cases. ","date":"Oct 6, 2021","objectID":"https://www.lordyod.com/hosting-with-hugo/:3:0","tags":["hugo","github","ci-cd"],"title":"Hosting With Hugo","uri":"https://www.lordyod.com/hosting-with-hugo/"},{"categories":["tech"],"content":"Write the first blog post There are a couple ways to make posts depending on how you want to store content. The simplest is to make individual Markdown files, which are stored in /content/: mysite on  main [+?] ➜ hugo new posts/first-post.md /Users/lordyod/git/mysite/content/posts/first-post.md created Hugo automatically generates the front matter for the post and places the file in the right location. We just need to open it with our favorite editor. I use Neovim: --- title: \"First Post\" date: 2021-10-06T17:04:45-07:00 draft: true --- Welcome to my blog! What we see here are two basic elements. The second element is the actual text of the post, which is written in Markdown and should be relatively straightforward. The more interesting part is the first element, the front matter, which Hugo generates in .yaml format by default: ---title:\"First Post\"date:2021-10-06T17:04:45-07:00draft:true--- We see that Hugo has filled in the title and date for us and then set draft: true. Additional front matter elements we might want to use include: description: a description of the post. keywords: a list of keywords in the post. tags: a list of tags for the post. Hugo automatically generates meta pages for tags and categories, which we’ll see later. slug: allows you to override the URL, if this is not set then the filename is used. categories: like tags, allows you to have Hugo organize the post in a generated meta list. There are a lot of capabilities I have skipped over here, read the docs for the full list. ","date":"Oct 6, 2021","objectID":"https://www.lordyod.com/hosting-with-hugo/:4:0","tags":["hugo","github","ci-cd"],"title":"Hosting With Hugo","uri":"https://www.lordyod.com/hosting-with-hugo/"},{"categories":["tech"],"content":"Host the server locally Okay that’s great, now how do we see what the post will look like? Hugo has a great live rendering capability: mysite on  main [+?] took 2s ➜ hugo server -D Start building sites … hugo v0.88.1+extended darwin/arm64 BuildDate=unknown WARN 2021/10/06 17:14:29 Current environment is \"development\". The \"comment system\", \"CDN\" and \"fingerprint\" will be disabled. 当前运行环境是 \"development\". \"评论系统\", \"CDN\" 和 \"fingerprint\" 不会启用. | EN -------------------+----- Pages | 10 Paginator pages | 0 Non-page files | 0 Static files | 83 Processed images | 0 Aliases | 2 Sitemaps | 1 Cleaned | 0 Built in 44 ms Watching for changes in /Users/petewilcox/git/mysite/{archetypes,content,data,layouts,static,themes} Watching for config changes in /Users/petewilcox/git/mysite/config.toml Environment: \"develpment\" Serving pages from memory Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender Web Server is available at http://localhost:1313/ (bind address 127.0.0.1) Press Ctrl+C to stop The command hugo server tells Hugo to run a local server out of the current directory structure, and the flag -D tells it to render draft content. Now if we open a web browser and go to http://localhost:1313 we see the main page of our blog showing our post: If we click the post title it takes us to the post itself: By default the hugo server command runs with live reload, meaning any changes to the site are reflected immediately in your local version. This is great for figuring out formatting issues and the like. ","date":"Oct 6, 2021","objectID":"https://www.lordyod.com/hosting-with-hugo/:5:0","tags":["hugo","github","ci-cd"],"title":"Hosting With Hugo","uri":"https://www.lordyod.com/hosting-with-hugo/"},{"categories":["tech"],"content":"Push code to Github Now it’s time to commit our changes and push to Github. Create a new private repository on Github and get the remote URL, which will be something like: git@github.com:lordyod/mysite.git Locally we’ll add it as a remote and push our code to it: mysite on  main [+?] took 2s ➜ git remote add origin git@github.com:lordyod/mysite.git mysite on  main [+?] ➜ git add . mysite on  main [+] ➜ git commit -m \"first commit\" [main (root-commit) 9d8753a] first commit 7 files changed, 199 insertions(+) create mode 100644 .gitmodules create mode 100644 archetypes/default.md create mode 100644 config.toml create mode 100644 content/posts/first-post.md create mode 100644 resources/_gen/assets/scss/css/style.scss_d75fd08668b4bae707167bbce4d8ca46.content create mode 100644 resources/_gen/assets/scss/css/style.scss_d75fd08668b4bae707167bbce4d8ca46.json create mode 160000 themes/CodeIT mysite on  main took 14s ➜ git push --set-upstream origin main Enumerating objects: 17, done. Counting objects: 100% (17/17), done. Delta compression using up to 8 threads Compressing objects: 100% (9/9), done. Writing objects: 100% (17/17), 12.20 KiB | 2.44 MiB/s, done. Total 17 (delta 0), reused 0 (delta 0), pack-reused 0 To github.com:lordyod/mysite.git * [new branch] main -\u003e main Branch 'main' set up to track remote branch 'main' from 'origin'. ","date":"Oct 6, 2021","objectID":"https://www.lordyod.com/hosting-with-hugo/:6:0","tags":["hugo","github","ci-cd"],"title":"Hosting With Hugo","uri":"https://www.lordyod.com/hosting-with-hugo/"},{"categories":["tech"],"content":"Configure public repository and setup deploy key Now that we have our code in our private repo, we will set up a repo to host the public blog. Create another repo named \u003cusername\u003e.github.io (replace \u003cusername\u003e with your user) and make sure it is set as public. Once it’s set up, create a new SSH key on your local machine with the command: mysite on  main ➜ ssh-keygen -t rsa -b 4096 -C \"$(git config user.email)\" -f gh-pages -N \"\" Generating public/private rsa key pair. Your identification has been saved in gh-pages Your public key has been saved in gh-pages.pub The key fingerprint is: SHA256:qaLYfAduznFzLt5ibXINL/fCv/KZlP79PK20K+oh4Qs github@lordyod.com The key's randomart image is: +---[RSA 4096]----+ | | | | | | | . | | S | | . o.. . | | .o.E.+=. o . .| | + o++**=oB+.+ =.| |. ++o+.*++oBO+=o*| +----[SHA256]-----+ We’re going to use this key pair to setup our CI/CD using Github Actions. In order to do that we’ll copy the public key gh-pages.pub and configure it as a deploy key by going to our public repo \u003cusername\u003e.github.io, then navigating to Settings \u003e Deploy keys \u003e Add deploy key. Paste the key into the box and save. Next we’ll take the private key and store it as a secret in our private repo by navigating to the mysite repo, then Settings \u003e Secrets \u003e New repository secret. Name this secret ACTIONS_DEPLOY_KEY and paste the private key gh-pages into the text box and click add secret. ","date":"Oct 6, 2021","objectID":"https://www.lordyod.com/hosting-with-hugo/:7:0","tags":["hugo","github","ci-cd"],"title":"Hosting With Hugo","uri":"https://www.lordyod.com/hosting-with-hugo/"},{"categories":["tech"],"content":"Configure Github action workflow Now that we have our deploy key configured, we are ready to add an action to make use of it. Github actions allow us to configure workflows which execute in response to certain events, which we will use in this instance to have a bot automatically build our site with Hugo and then push the static content to our public repo. This way, we can keep the actual content we use to generate the site in a private repo where others won’t be able to interact with it. We’re going to use the GitHub Actions for Hugo and GitHub Actions for GitHub Pages actions to accomplish this, both by Shohei Ueda. To configure Github actions we add workflow definition .yml file to .github/workflows/ in the root of our private repository. name:CIon:pushjobs:deploy:runs-on:ubuntu-20.04steps:- name:Git checkoutuses:actions/checkout@v2- name:Update theme# (Optional)If you have the theme added as submodule, you can pull it# and use the most updated versionrun:git submodule update --init --recursive- name:Setup hugouses:peaceiris/actions-hugo@v2with:hugo-version:\"0.88.0\"- name:Build# remove --minify tag if you do not need it# docs: https://gohugo.io/hugo-pipes/minification/run:hugo --minify- name:Deployuses:peaceiris/actions-gh-pages@v3with:# Use configured private key to deploy to public repodeploy_key:${{ secrets.ACTIONS_DEPLOY_KEY }}# Public repo informationexternal_repository:lordyod/lordyod.github.io# Local path to site source, pushed to root of external repopublish_dir:./public# Whether we should overwrite extra files in the repokeep_files:true# user credentialsuser_name:\"lordyod\"user_email:\"github@lordyod.com\"# Branch to publish onpublish_branch:main# used for DNS settings to enable HTTPScname:www.lordyod.com This workflow runs five steps: Checkout the private repo Update the theme Install Hugo Build the site, using the --minify flag to reduce its size Deploy the site to the public repo The deploy_key field is automatically populated with the secret we stored in our private repo earlier. Now we’ll commit this code and push it to Github, where we can open the Actions tab to view its progress: Once the action is complete we can verify it deployed by going to the public repo and looking at the commit log: ","date":"Oct 6, 2021","objectID":"https://www.lordyod.com/hosting-with-hugo/:8:0","tags":["hugo","github","ci-cd"],"title":"Hosting With Hugo","uri":"https://www.lordyod.com/hosting-with-hugo/"},{"categories":["tech"],"content":"Publish site Now our site has been uploaded to our public repo, we are ready to publish it using Github Pages. Head to the public repo page, then navigate to Settings \u003e Pages. Select the Source dropdown and pick the main branch, then pick the / (root) location and click save. And just like that, our site will go live at \u003cusername\u003e.github.io! ","date":"Oct 6, 2021","objectID":"https://www.lordyod.com/hosting-with-hugo/:9:0","tags":["hugo","github","ci-cd"],"title":"Hosting With Hugo","uri":"https://www.lordyod.com/hosting-with-hugo/"},{"categories":["tech"],"content":"Final words Going forward, all you need to do in order to publish new posts is use hugo new posts/mypost.md to create the template, edit the markdown in your editor, then commit and push to your private repo. Our configured Github Action will take care of building and deploying the generated static site to our public repo. There are some further steps we can take to enhance our new blog with comments, social sharing, and a custom domain name using HTTPS, which I’ll go into next time. ","date":"Oct 6, 2021","objectID":"https://www.lordyod.com/hosting-with-hugo/:10:0","tags":["hugo","github","ci-cd"],"title":"Hosting With Hugo","uri":"https://www.lordyod.com/hosting-with-hugo/"},{"categories":["rpg"],"content":"I’m running Waterdeep Dragon Heist using the Alexandrian Remix for a group of inexperienced players. The party: Blackberry Rabbitfoot, a halfling rogue. Of the six attack rolls she has made, 4 have been critical hits. She steals everything that isn’t nailed down. Sanghorn, an aasimar monk. He’s thought he was human his whole life, but recently started hearing from a spirit in his head, and has come to Waterdeep to find out what this means. Tirsa, a satyr bard. We don’t know a ton about her yet, but she loves to play tricks on people and use her wiles to have her way. Sgawl, a gnome sorcerer. They’re very quiet but are able to unleash a significant amount of arcane power. They’re somewhat grown over with moss, like Radagast. The party is midway through chapter one. ","date":"Oct 5, 2021","objectID":"https://www.lordyod.com/waterdeep-dragon-heist/:0:0","tags":["dnd","wdh"],"title":"Waterdeep Dragon Heist","uri":"https://www.lordyod.com/waterdeep-dragon-heist/"},{"categories":["rpg"],"content":"Beatrix is a half-orc Gray Watchman Warden. In the Radiant Gaia setting, half-orcs are raised on stories of the heroism and valor of their orc ancestors, and Beatrix aspires to this. She believes strongly in the value of law and order, and had a promising career in the city watch before she had to give it up in order to pay off a gambling debt her lousy brother had built up. She is a competent warrior who focuses on utilizing her strong defense to protect other members of the party, keeping the enemy off balance and focused on her. ","date":"Oct 5, 2021","objectID":"https://www.lordyod.com/beatrix/:0:0","tags":["beatrix","dnd"],"title":"Beatrix the Monolith","uri":"https://www.lordyod.com/beatrix/"},{"categories":["rpg"],"content":"This is a science fantasy campaign set in a homebrew world, run using a hacked version of 5th Edition D\u0026D. The current party: Brisby, a halfling/goblin cleric from the mountains of the Mashioque Dynasty. They were raised by their adopted Dragonborn family and are not aware of their goblin heritage. They are a cleric of law and order, and are seeking their life’s purpose. Zo-zu, a human/goblin artificer from the Empire of Corus. A member of the Corus army, he’s been deployed as part of the peacekeeping forces to the area and serves as the connection to the party’s primary patron. Greta, a dwarf investigator from the Free Cities of Mihira. A middle-aged woman with a family back home, she is wandering the world in search of her long-lost brother. Magdrek, a bugbear barbarian from the Ellisdeen Wilds in western Eryssia. A follower of Hruggek, the patron of violence, he believes in might being right and the value of proving your point physically. Previous party members: Lein, a tortle monk from Glaeyd Strium, died from a derro hook spear to the head while pacifying a temple to Bha’al. Ashal, a leonin fighter from the plains of the Mashioque Dynasty, died when overrun by angry blights animated to defend the Ellisdeen Wilds. The party has been on a quest to retrieve a mysterious artifact, the Heart of the Forest, and return it to its rightful place in the far northeast part of the Ellisdeen Wilds. In our most recent session they have found the temple to return the heart, only to discover it is some kind of ancient technology. They attempted to replace the heart in its sarcophagus but failed to realize that the apparatus had been damaged when it was stolen. This caused the replacement to go awry and the installation defenses triggered. One of the bugbear allies stayed behind to buy the party time to escape, and we have not yet seen the fallout of this. ","date":"Oct 5, 2021","objectID":"https://www.lordyod.com/sinath-lonn/:0:0","tags":["dnd","osr","homebrew","sinath-lonn"],"title":"Sinath Lonn","uri":"https://www.lordyod.com/sinath-lonn/"},{"categories":["rpg"],"content":"I’m running the Hot Springs Island sandbox campaign by Jacob Hurst, using the Old School Essentials ruleset. We’re starting with the Classic ruleset, 3d6 in order. It’s likely to be a very high-stakes game and this’ll probably be a rude awakening for some of the players as they’ve only had experience with 5e. The party consists of a dwarf, a thief, a fighter, and two magic-users. So far the only thing we’ve done is a session zero, it’s scheduled to start next week. ","date":"Oct 5, 2021","objectID":"https://www.lordyod.com/hot-springs-island/:0:0","tags":["hsi","dnd","bx"],"title":"Hot Springs Island","uri":"https://www.lordyod.com/hot-springs-island/"},{"categories":["rpg"],"content":"What games I'm playing at the moment","date":"Oct 5, 2021","objectID":"https://www.lordyod.com/current-rpgs/","tags":["dnd","mothership","osr","bx","mcc","wdh","hsi","sinath-lonn"],"title":"Current RPGs","uri":"https://www.lordyod.com/current-rpgs/"},{"categories":["rpg"],"content":"I’ll try to keep this post updated with a list of the games I’m currently running or playing in. ","date":"Oct 5, 2021","objectID":"https://www.lordyod.com/current-rpgs/:0:0","tags":["dnd","mothership","osr","bx","mcc","wdh","hsi","sinath-lonn"],"title":"Current RPGs","uri":"https://www.lordyod.com/current-rpgs/"},{"categories":["rpg"],"content":"Playing Radiant Gaia: an open table 5th Edition D\u0026D game set in a homebrew world, the players (mostly) come from an underground realm called Terra and are sent on expeditions to explore Gaia by a patron. I play Beatrix the Monolith, a half-orc Grey Watchman Warden. This game is run by Sammy who I met through the wonderful Alexandrian Discord. Mutant Marches: a West Marches game using Mutant Crawl Classics, the PCs are ‘seekers’ from a small village which suffered a catastrophe and lost its communal records of the surrounding region. They send expeditions out in search of resources, allies, and artifacts of the Ancients. It’s run by Darren (who I also met through the Alexandrian Discord). ","date":"Oct 5, 2021","objectID":"https://www.lordyod.com/current-rpgs/:1:0","tags":["dnd","mothership","osr","bx","mcc","wdh","hsi","sinath-lonn"],"title":"Current RPGs","uri":"https://www.lordyod.com/current-rpgs/"},{"categories":["rpg"],"content":"Running Sinath Lonn: a science-fantasy homebrew setting using some heavily-modified 5th Edition rules, this is a really big sandbox game. Waterdeep Dragon Heist: I’m using the incredible Alexandrian Remix to run the published campaign as a gentle introduction to D\u0026D for some players who have basically never played before. Hot Springs Island: This module by Jacob Hurst is simply incredible. It’s system agnostic so I’m taking the opportunity to get into old-school D\u0026D with the Old School Essentials retroclone. ","date":"Oct 5, 2021","objectID":"https://www.lordyod.com/current-rpgs/:2:0","tags":["dnd","mothership","osr","bx","mcc","wdh","hsi","sinath-lonn"],"title":"Current RPGs","uri":"https://www.lordyod.com/current-rpgs/"},{"categories":["rpg"],"content":"Level Up 5E advertises itself as ‘advanced 5th edition’ and I’ve had my eye on it for a while. While I haven’t run any playtests I have read the material they’ve released. I like a lot of the ideas that have have been introduced, such as increased martial class flexibility and an increased emphasis on the exploration pillar of play. ","date":"Oct 5, 2021","objectID":"https://www.lordyod.com/thoughts-on-a5e/:0:0","tags":["dnd","kickstarter"],"title":"Thoughts on A5e","uri":"https://www.lordyod.com/thoughts-on-a5e/"},{"categories":["blog"],"content":"What is this blog about, and who am I?","date":"Oct 4, 2021","objectID":"https://www.lordyod.com/a-wild-blog-appears/","tags":["meta"],"title":"A wild blog appears","uri":"https://www.lordyod.com/a-wild-blog-appears/"},{"categories":["blog"],"content":"Hi, I’m Yod. I’m starting this blog to share some thoughts on my interests. This will probably be limited mostly to gaming and tech since those are the things I generally feel the safest sharing with others, but who knows? A bit about me: I’m a cis white 18-49 American. My pronouns are he/him/his. I consider myself on the far left side of the political spectrum. I plan to use this site to chat about my hobbies: I’ve been playing and running various RPG’s since the 90s. Mostly this has been D\u0026D/Pathfinder, but I have also enjoyed (in no particular order) Traveller, World of Darkness, Brave New World, GURPS, and a litany of other games. More recently I’ve been digging into the OSR and am starting an Old School Essentials game. I play video games also. My steam library is extensive. I tend to refrain from competitive multiplayer games and usually enjoy CRPG’s, strategy, and narrative-first games, although a decade or so ago I played a lot of Battlefield. I watch a fair amount of TV and movies and might talk about them. I like tech and enjoy setting up a relatively sophisticated home network. I try to self-host anything I can and intend to share some of what I’ve learned. Things you won’t find here: Support for cops, Nazis, or gender roles. ","date":"Oct 4, 2021","objectID":"https://www.lordyod.com/a-wild-blog-appears/:0:0","tags":["meta"],"title":"A wild blog appears","uri":"https://www.lordyod.com/a-wild-blog-appears/"}]